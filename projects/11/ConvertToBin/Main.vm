function Main.main 1
push constant 8001
push constant 16
push constant 1
neg
call Main.fillMemory 3
pop temp 0
push constant 8000
call Memory.peek 1
pop local 0
push local 0
call Main.convert 1
pop temp 0
push constant 0
return
function Main.convert 3
push constant 1
neg
pop local 2
label Main.convert$WHILE_TRUE$0
push local 2
not
if-goto Main.convert$WHILE_FALSE$1
push local 1
push constant 1
add
pop local 1
push local 0
call Main.nextMask 1
pop local 0
push local 1
push constant 16
gt
not
not
if-goto Main.convert$IF_FALSE$2
push argument 0
push local 0
and
push constant 0
eq
not
not
if-goto Main.convert$IF_FALSE$3
push constant 8000
push local 1
add
push constant 1
call Memory.poke 2
pop temp 0
goto Main.convert$SKIP_ELSE$4
label Main.convert$IF_FALSE$3
push constant 8000
push local 1
add
push constant 0
call Memory.poke 2
pop temp 0
label Main.convert$SKIP_ELSE$4
goto Main.convert$SKIP_ELSE$5
label Main.convert$IF_FALSE$2
push constant 0
pop local 2
label Main.convert$SKIP_ELSE$5
goto Main.convert$WHILE_TRUE$0
label Main.convert$WHILE_FALSE$1
push constant 0
return
function Main.nextMask 0
push argument 0
push constant 0
eq
not
if-goto Main.nextMask$IF_FALSE$6
push constant 1
return
goto Main.nextMask$SKIP_ELSE$7
label Main.nextMask$IF_FALSE$6
push argument 0
push constant 2
call Math.multiply 2
return
label Main.nextMask$SKIP_ELSE$7
function Main.fillMemory 0
label Main.fillMemory$WHILE_TRUE$8
push argument 1
push constant 0
gt
not
if-goto Main.fillMemory$WHILE_FALSE$9
push argument 0
push argument 2
call Memory.poke 2
pop temp 0
push argument 1
push constant 1
sub
pop argument 1
push argument 0
push constant 1
add
pop argument 0
goto Main.fillMemory$WHILE_TRUE$8
label Main.fillMemory$WHILE_FALSE$9
push constant 0
return
