// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
        DMux8Way(in=load, sel=address[11..13], a=ram0, b=ram1, c=ram2, d=ram3, e=ram4, f=ram5, g=ram6, h=ram7);
        RAM4K(in=in, address=address[0..11], load=ram0, out=out0);
        RAM4K(in=in, address=address[0..11], load=ram1, out=out1);
        RAM4K(in=in, address=address[0..11], load=ram2, out=out2);
        RAM4K(in=in, address=address[0..11], load=ram3, out=out3);
        RAM4K(in=in, address=address[0..11], load=ram4, out=out4);
        RAM4K(in=in, address=address[0..11], load=ram5, out=out5);
        RAM4K(in=in, address=address[0..11], load=ram6, out=out6);
        RAM4K(in=in, address=address[0..11], load=ram7, out=out7);
        Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address[11..13], out=out);
}
