// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
        // Create the flipped controls
        Not(in=reset, out=notReset);
        Not(in=load, out=notLoad);
        Not(in=inc, out=notInc);

        // sel[1]
        And(a=notReset, b=notLoad, out=f1);

        // sel[0]
        And(a=notReset, b=load, out=f2Left);
        And(a=notReset, b=notLoad, out=f2Right1);
        And(a=f2Right1, b=notInc, out=f2Right);
        Or(a=f2Left, b=f2Right, out=f2);

        // Pick input
        Mux4Way16(a=false, b=in, c=incOut, d=rOut, sel[1]=f1, sel[0]=f2, out=muxOut);

        // We don't really need a register, just a 16-way flip flip
        Register(in=muxOut, out=rOut, load=true);
        Inc16(in=rOut, out=incOut);

        And16(a=rOut, b=true, out=out);
}
